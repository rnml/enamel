#+STARTUP: hidestars
* == done =========================================================
* DONE source syntax = sexp
* DONE type checker / module elaborator
* DONE better unbound spec sexp syntax
* DONE unbound compiler output that builds
* DONE typed names
* DONE debug toposort unbound output
* DONE use new polymorphic names in unbound output
* DONE remove unnecessary Self references in unbound output
* == active =======================================================
* TODO generated code [val fvs : t -> Name.Set.t]
* TODO build against generated code

  inject/project (?)
  val swap : Name.t * Name.t -> t -> t
  val subst : t -> Name.t * t -> t
  val equal : t -> t -> bool

* TODO remove unnecessary parens in unbound output
* TODO build rules for .syntax files
* TODO fix Text_block.{hstrut,vstrut}
  Text_block.(hcat ~sep:(hstrut 1) ...) doesn't space out
* TODO compiler: unbound spec -> type + type class instances
* TODO erasure phase from F-omega to a dynamically typed language
* TODO interpreter for dynamically typed language
* == projects =====================================================
* get a monomorphic base language to run
* let-polymorphism
* macros
* type error slicer
* polymorphic records/variants
